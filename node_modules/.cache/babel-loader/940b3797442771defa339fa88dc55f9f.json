{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nimport { fetchRemovePost } from \"./auth\";\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const {\n    data\n  } = await axios.get('/posts');\n  return data;\n});\nexport const fetchTags = createAsyncThunk('posts/fetchTags', async () => {\n  const {\n    data\n  } = await axios.get('/tags');\n  return data;\n});\nexport const fetchComments = createAsyncThunk('comments/fetchComments', async postId => {\n  const {\n    data\n  } = await axios.get(`/posts/${postId}/comments`);\n  return data;\n});\nexport const addComment = createAsyncThunk('comments/addComments', async (postId, text) => {\n  const {\n    data\n  } = await axios.post(`/posts/${postId}/comments`, {\n    text\n  });\n  return data;\n});\nexport const removeComment = createAsyncThunk('comments/removeComments', async commentId => {\n  await axios.delete(`/comments/${commentId}`);\n  return commentId;\n});\nexport const fetchPopularPosts = createAsyncThunk('posts/fetchPopularPosts', async () => {\n  const {\n    data\n  } = await axios.get('/posts/popular');\n  return data;\n});\nexport const fetchPostsByTag = createAsyncThunk('posts/fetchPostsByTag', async tag => {\n  const response = await axios.get(`/posts/tags/${tag}`);\n  console.log('Response from server:', response.data);\n  return response.data;\n});\nconst initialState = {\n  posts: {\n    items: [],\n    status: 'loading'\n  },\n  tags: {\n    items: [],\n    status: 'loading'\n  },\n  comments: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Получение статей\n    [fetchPosts.pending]: state => {\n      state.posts.items = [];\n      state.posts.status = 'loading';\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.posts.items = action.payload;\n      state.posts.status = 'loaded';\n    },\n    [fetchPosts.rejected]: state => {\n      state.posts.items = [];\n      state.posts.status = 'error';\n    },\n    // Получение тэгов\n    [fetchTags.pending]: state => {\n      state.tags.items = [];\n      state.tags.status = 'loading';\n    },\n    [fetchTags.fulfilled]: (state, action) => {\n      state.tags.items = action.payload;\n      state.tags.status = 'loaded';\n    },\n    [fetchTags.rejected]: state => {\n      state.tags.items = [];\n      state.tags.status = 'error';\n    },\n    // Удаление\n    [fetchRemovePost.pending]: (state, aciton) => {\n      state.posts.items = state.posts.items.filter(obj => obj._id !== aciton.meta.arg);\n    },\n    // получение коментариев\n    [fetchComments.pending]: state => {\n      state.comments.items = [];\n      state.comments.status = 'loading';\n    },\n    [fetchComments.fulfilled]: (state, action) => {\n      state.comments.items = action.payload;\n      state.comments.status = 'loaded';\n    },\n    [fetchComments.rejected]: state => {\n      state.comments.items = [];\n      state.comments.status = 'error';\n    },\n    // добавление коментариев\n    [addComment.fulfilled]: (state, action) => {\n      const {\n        postId,\n        comment\n      } = action.payload;\n      const post = state.posts.items.find(post => post._id === postId);\n\n      if (post) {\n        post.comments.push(comment);\n      }\n    },\n    [removeComment.fulfilled]: (state, action) => {\n      const commentId = action.payload;\n      state.comments.items = state.comments.items.filter(comment => comment._id !== commentId);\n    },\n    [fetchPostsByTag.pending]: (state, action) => {\n      state.posts.items = [];\n      state.posts.status = \"loading\";\n    },\n    [fetchPostsByTag.fulfilled]: (state, action) => {\n      console.log('Fetched posts:', action.payload);\n      state.posts.items = action.payload;\n      state.posts.status = \"loaded\";\n    },\n    [fetchPostsByTag.rejected]: state => {\n      state.posts.items = [];\n      state.posts.status = \"error\";\n    }\n  }\n});\nexport const postsReducer = postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchRemovePost","fetchPosts","data","get","fetchTags","fetchComments","postId","addComment","text","post","removeComment","commentId","delete","fetchPopularPosts","fetchPostsByTag","tag","response","console","log","initialState","posts","items","status","tags","comments","postsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","aciton","filter","obj","_id","meta","arg","comment","find","push","postsReducer","reducer"],"sources":["C:/Users/heyda/OneDrive/Рабочий стол/blog/mern-blog-frontend/src/redux/slices/posts.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\nimport { fetchRemovePost } from \"./auth\";\r\n\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async() => {\r\n    const { data } = await axios.get('/posts')\r\n    return data\r\n})\r\n\r\nexport const fetchTags = createAsyncThunk('posts/fetchTags', async() => {\r\n    const { data } = await axios.get('/tags')\r\n    return data\r\n})\r\n\r\nexport const fetchComments = createAsyncThunk('comments/fetchComments', async(postId) => {\r\n    const {data} = await axios.get(`/posts/${postId}/comments`)\r\n    return data\r\n})\r\n\r\nexport const addComment = createAsyncThunk('comments/addComments', async(postId, text) => {\r\n    const {data} = await axios.post(`/posts/${postId}/comments`, {text})\r\n    return data\r\n})\r\n\r\n\r\nexport const removeComment = createAsyncThunk('comments/removeComments', async(commentId) => {\r\n    await axios.delete(`/comments/${commentId}`)\r\n    return commentId\r\n})\r\n\r\nexport const fetchPopularPosts = createAsyncThunk('posts/fetchPopularPosts', async() => {\r\n    const { data } = await axios.get('/posts/popular')\r\n    return data\r\n})\r\n\r\nexport const fetchPostsByTag = createAsyncThunk(\r\n    'posts/fetchPostsByTag',\r\n    async (tag) => {\r\n      const response = await axios.get(`/posts/tags/${tag}`);\r\n      console.log('Response from server:', response.data);\r\n      return response.data;\r\n    }\r\n  );\r\n\r\nconst initialState = {\r\n    posts: {\r\n        items: [],\r\n        status: 'loading'\r\n    },\r\n    tags: {\r\n        items: [],\r\n        status: 'loading'\r\n    },\r\n    comments: {\r\n        items: [],\r\n        status: 'loading'\r\n    }\r\n}\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        // Получение статей\r\n        [fetchPosts.pending]: (state) => {\r\n            state.posts.items = []\r\n            state.posts.status = 'loading'\r\n        },\r\n        [fetchPosts.fulfilled]: (state, action) => {\r\n            state.posts.items = action.payload\r\n            state.posts.status = 'loaded'\r\n        },\r\n        [fetchPosts.rejected]: (state) => {\r\n            state.posts.items = []\r\n            state.posts.status = 'error'\r\n        },\r\n                // Получение тэгов\r\n        [fetchTags.pending]: (state) => {\r\n            state.tags.items = []\r\n            state.tags.status = 'loading'\r\n        },\r\n        [fetchTags.fulfilled]: (state, action) => {\r\n            state.tags.items = action.payload\r\n            state.tags.status = 'loaded'\r\n        },\r\n        [fetchTags.rejected]: (state) => {\r\n            state.tags.items = []\r\n            state.tags.status = 'error'\r\n        },\r\n        // Удаление\r\n\r\n        [fetchRemovePost.pending]: (state, aciton) => {\r\n            state.posts.items = state.posts.items.filter(obj => obj._id !== aciton.meta.arg)\r\n        },\r\n\r\n        // получение коментариев\r\n\r\n        [fetchComments.pending]: (state) => {\r\n            state.comments.items = []\r\n            state.comments.status = 'loading'\r\n        },\r\n        [fetchComments.fulfilled]: (state, action) => {\r\n            state.comments.items = action.payload\r\n            state.comments.status = 'loaded'\r\n        },\r\n        [fetchComments.rejected]: (state) => {\r\n            state.comments.items = []\r\n            state.comments.status = 'error'\r\n        },\r\n\r\n        // добавление коментариев\r\n\r\n        [addComment.fulfilled]: (state, action) => {\r\n            const { postId, comment } = action.payload\r\n            const post = state.posts.items.find(post => post._id === postId)\r\n            if(post) {\r\n                post.comments.push(comment)\r\n            }\r\n        },\r\n\r\n        [removeComment.fulfilled]: (state, action) => {\r\n            const commentId = action.payload\r\n            state.comments.items = state.comments.items.filter(comment => comment._id !== commentId)\r\n        },\r\n\r\n        [fetchPostsByTag.pending]: (state, action) => {\r\n            state.posts.items = [];\r\n            state.posts.status = \"loading\";\r\n          },\r\n          [fetchPostsByTag.fulfilled]: (state, action) => {\r\n            console.log('Fetched posts:', action.payload)\r\n            state.posts.items = action.payload;\r\n            state.posts.status = \"loaded\";\r\n          },\r\n          [fetchPostsByTag.rejected]: (state) => {\r\n            state.posts.items = [];\r\n            state.posts.status = \"error\";\r\n          },\r\n    }\r\n})\r\n\r\nexport const postsReducer = postsSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}