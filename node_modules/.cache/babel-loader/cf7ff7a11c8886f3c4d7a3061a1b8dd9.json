{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyda\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\blog\\\\mern-blog-frontend\\\\src\\\\components\\\\tagsPosts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Post } from \"../components/Post\";\nimport { fetchPostsByTag } from \"../redux/slices/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TagPosts = () => {\n  _s();\n\n  const {\n    tag\n  } = useParams(); // Получаем тег из URL\n\n  const dispatch = useDispatch();\n  const {\n    posts\n  } = useSelector(state => state.posts);\n  const isPostsLoading = posts.status === \"loading\";\n  React.useEffect(() => {\n    dispatch(fetchPostsByTag(tag));\n  }, [dispatch, tag]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u043E\\u0441\\u0442\\u044B \\u0441 \\u0442\\u0435\\u0433\\u043E\\u043C: \", tag]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), (isPostsLoading ? [...Array(5)] : posts.items).map((obj, index) => isPostsLoading ? /*#__PURE__*/_jsxDEV(Post, {\n      isLoading: true\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Post, {\n      id: obj._id,\n      title: obj.title,\n      imageUrl: obj.imageUrl ? `http://localhost:4444${obj.imageUrl}` : \"\",\n      user: obj.user,\n      createdAt: new Date(obj.createdAt).toLocaleDateString(),\n      viewsCount: obj.viewsCount,\n      commentsCount: 3,\n      tags: obj.tags,\n      isLoading: false\n    }, obj._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n\n_s(TagPosts, \"WzrwnnPKVqpCqs4RPvwkzXb2vSQ=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = TagPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagPosts\");","map":{"version":3,"names":["React","useParams","useDispatch","useSelector","Post","fetchPostsByTag","TagPosts","tag","dispatch","posts","state","isPostsLoading","status","useEffect","Array","items","map","obj","index","_id","title","imageUrl","user","Date","createdAt","toLocaleDateString","viewsCount","tags"],"sources":["C:/Users/heyda/OneDrive/Рабочий стол/blog/mern-blog-frontend/src/components/tagsPosts.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Post } from \"../components/Post\";\r\nimport { fetchPostsByTag } from \"../redux/slices/posts\";\r\n\r\nexport const TagPosts = () => {\r\n  const { tag } = useParams(); // Получаем тег из URL\r\n  const dispatch = useDispatch();\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  \r\n  const isPostsLoading = posts.status === \"loading\";\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchPostsByTag(tag)); \r\n  }, [dispatch, tag]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Посты с тегом: {tag}</h1>\r\n      {(isPostsLoading ? [...Array(5)] : posts.items).map((obj, index) =>\r\n        isPostsLoading ? (\r\n          <Post key={index} isLoading={true} />\r\n        ) : (\r\n          <Post\r\n            key={obj._id}\r\n            id={obj._id}\r\n            title={obj.title}\r\n            imageUrl={obj.imageUrl ? `http://localhost:4444${obj.imageUrl}` : \"\"}\r\n            user={obj.user}\r\n            createdAt={new Date(obj.createdAt).toLocaleDateString()}\r\n            viewsCount={obj.viewsCount}\r\n            commentsCount={3}\r\n            tags={obj.tags}\r\n            isLoading={false}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,eAAT,QAAgC,uBAAhC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAM;IAAEC;EAAF,IAAUN,SAAS,EAAzB,CAD4B,CACC;;EAC7B,MAAMO,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM;IAAEO;EAAF,IAAYN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAA7B;EAGA,MAAME,cAAc,GAAGF,KAAK,CAACG,MAAN,KAAiB,SAAxC;EAEAZ,KAAK,CAACa,SAAN,CAAgB,MAAM;IACpBL,QAAQ,CAACH,eAAe,CAACE,GAAD,CAAhB,CAAR;EACD,CAFD,EAEG,CAACC,QAAD,EAAWD,GAAX,CAFH;EAIA,oBACE;IAAA,wBACE;MAAA,qFAAoBA,GAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACI,cAAc,GAAG,CAAC,GAAGG,KAAK,CAAC,CAAD,CAAT,CAAH,GAAmBL,KAAK,CAACM,KAAxC,EAA+CC,GAA/C,CAAmD,CAACC,GAAD,EAAMC,KAAN,KAClDP,cAAc,gBACZ,QAAC,IAAD;MAAkB,SAAS,EAAE;IAA7B,GAAWO,KAAX;MAAA;MAAA;MAAA;IAAA,QADY,gBAGZ,QAAC,IAAD;MAEE,EAAE,EAAED,GAAG,CAACE,GAFV;MAGE,KAAK,EAAEF,GAAG,CAACG,KAHb;MAIE,QAAQ,EAAEH,GAAG,CAACI,QAAJ,GAAgB,wBAAuBJ,GAAG,CAACI,QAAS,EAApD,GAAwD,EAJpE;MAKE,IAAI,EAAEJ,GAAG,CAACK,IALZ;MAME,SAAS,EAAE,IAAIC,IAAJ,CAASN,GAAG,CAACO,SAAb,EAAwBC,kBAAxB,EANb;MAOE,UAAU,EAAER,GAAG,CAACS,UAPlB;MAQE,aAAa,EAAE,CARjB;MASE,IAAI,EAAET,GAAG,CAACU,IATZ;MAUE,SAAS,EAAE;IAVb,GACOV,GAAG,CAACE,GADX;MAAA;MAAA;MAAA;IAAA,QAJH,CAFH;EAAA,gBADF;AAuBD,CAnCM;;GAAMb,Q;UACKL,S,EACCC,W,EACCC,W;;;KAHPG,Q"},"metadata":{},"sourceType":"module"}