{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyda\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\blog\\\\mern-blog-frontend\\\\src\\\\components\\\\tagsPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPostsByTag } from \"../redux/slices/posts\";\nimport { Post } from \"../components/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TagsPosts = () => {\n  _s();\n\n  const {\n    tag\n  } = useParams(); // Получаем тег из URL\n\n  const dispatch = useDispatch();\n  const {\n    items: posts,\n    status\n  } = useSelector(state => state.posts); // Данные о постах\n\n  const isPostsLoading = status === 'loading'; // Проверка статуса загрузки\n\n  useEffect(() => {\n    if (tag) {\n      dispatch(fetchPostsByTag(tag)); // Загружаем посты по выбранному тегу\n    }\n  }, [dispatch, tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u043E\\u0441\\u0442\\u044B \\u0441 \\u0442\\u0435\\u0433\\u043E\\u043C: \", tag]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) // Отображаем текст \"Загрузка...\" пока данные не загружены\n    : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435\\u0442 \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u0441 \\u044D\\u0442\\u0438\\u043C \\u0442\\u0435\\u0433\\u043E\\u043C.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      title: post.title,\n      text: post.text,\n      tags: post.tags\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagsPosts, \"5JQJIn5x3YpEpUjmxkj88DKfwHw=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = TagsPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsPosts\");","map":{"version":3,"names":["React","useEffect","useParams","useDispatch","useSelector","fetchPostsByTag","Post","TagsPosts","tag","dispatch","items","posts","status","state","isPostsLoading","length","map","post","title","text","tags","_id"],"sources":["C:/Users/heyda/OneDrive/Рабочий стол/blog/mern-blog-frontend/src/components/tagsPosts.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPostsByTag } from \"../redux/slices/posts\";\r\nimport { Post } from \"../components/Post\";\r\n\r\nexport const TagsPosts = () => {\r\n  const { tag } = useParams();  // Получаем тег из URL\r\n  const dispatch = useDispatch();\r\n  const { items: posts, status } = useSelector((state) => state.posts);  // Данные о постах\r\n  const isPostsLoading = status === 'loading';  // Проверка статуса загрузки\r\n\r\n  useEffect(() => {\r\n    if (tag) {\r\n      dispatch(fetchPostsByTag(tag));  // Загружаем посты по выбранному тегу\r\n    }\r\n  }, [dispatch, tag]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Посты с тегом: {tag}</h1>\r\n      {isPostsLoading ? (\r\n        <p>Загрузка...</p>  // Отображаем текст \"Загрузка...\" пока данные не загружены\r\n      ) : (\r\n        posts.length === 0 ? (\r\n          <p>Нет постов с этим тегом.</p>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <Post key={post._id} title={post.title} text={post.text} tags={post.tags} />\r\n          ))\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM;IAAEC;EAAF,IAAUN,SAAS,EAAzB,CAD6B,CACC;;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM;IAAEO,KAAK,EAAEC,KAAT;IAAgBC;EAAhB,IAA2BR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACF,KAAlB,CAA5C,CAH6B,CAG0C;;EACvE,MAAMG,cAAc,GAAGF,MAAM,KAAK,SAAlC,CAJ6B,CAIiB;;EAE9CX,SAAS,CAAC,MAAM;IACd,IAAIO,GAAJ,EAAS;MACPC,QAAQ,CAACJ,eAAe,CAACG,GAAD,CAAhB,CAAR,CADO,CAC0B;IAClC;EACF,CAJQ,EAIN,CAACC,QAAD,EAAWD,GAAX,CAJM,CAAT;EAMA,oBACE;IAAA,wBACE;MAAA,qFAAoBA,GAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGM,cAAc,gBACb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADa,CACO;IADP,EAGbH,KAAK,CAACI,MAAN,KAAiB,CAAjB,gBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,GAGEJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACR,QAAC,IAAD;MAAqB,KAAK,EAAEA,IAAI,CAACC,KAAjC;MAAwC,IAAI,EAAED,IAAI,CAACE,IAAnD;MAAyD,IAAI,EAAEF,IAAI,CAACG;IAApE,GAAWH,IAAI,CAACI,GAAhB;MAAA;MAAA;MAAA;IAAA,QADF,CARN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA5BM;;GAAMd,S;UACKL,S,EACCC,W,EACgBC,W;;;KAHtBG,S"},"metadata":{},"sourceType":"module"}