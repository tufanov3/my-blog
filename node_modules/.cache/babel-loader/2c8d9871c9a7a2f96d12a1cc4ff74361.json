{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nimport { fetchRemovePost } from \"./auth\";\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const {\n    data\n  } = await axios.get('/posts');\n  return data;\n});\nexport const fetchTags = createAsyncThunk('posts/fetchTags', async () => {\n  const {\n    data\n  } = await axios.get('/tags');\n  return data;\n});\nexport const fetchComments = createAsyncThunk('comments/fetchComments', async postId => {\n  const {\n    data\n  } = await axios.get(`/posts/${postId}/comments`);\n  return data;\n});\nexport const addComment = createAsyncThunk('comments/addComments', async (postId, text) => {\n  const {\n    data\n  } = await axios.post(`/posts/${postId}/comments`, {\n    text\n  });\n  return data;\n});\nexport const removeComment = createAsyncThunk('comments/removeComments', async commentId => {\n  await axios.delete(`/comments/${commentId}`);\n  return commentId;\n});\nconst initialState = {\n  posts: {\n    items: [],\n    status: 'loading'\n  },\n  tags: {\n    items: [],\n    status: 'loading'\n  },\n  comments: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Получение статей\n    [fetchPosts.pending]: state => {\n      state.posts.items = [];\n      state.posts.status = 'loading';\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.posts.items = action.payload;\n      state.posts.status = 'loaded';\n    },\n    [fetchPosts.rejected]: state => {\n      state.posts.items = [];\n      state.posts.status = 'error';\n    },\n    // Получение тэгов\n    [fetchTags.pending]: state => {\n      state.tags.items = [];\n      state.tags.status = 'loading';\n    },\n    [fetchTags.fulfilled]: (state, action) => {\n      state.tags.items = action.payload;\n      state.tags.status = 'loaded';\n    },\n    [fetchTags.rejected]: state => {\n      state.tags.items = [];\n      state.tags.status = 'error';\n    },\n    // Удаление\n    [fetchRemovePost.pending]: (state, aciton) => {\n      state.posts.items = state.posts.items.filter(obj => obj._id !== aciton.meta.arg);\n    },\n    // получение коментариев\n    [fetchComments.pending]: state => {\n      state.comments.items = [];\n      state.comments.status = 'loading';\n    },\n    [fetchComments.fulfilled]: (state, action) => {\n      state.comments.items = action.payload;\n      state.comments.status = 'loaded';\n    },\n    [fetchComments.rejected]: state => {\n      state.comments.items = [];\n      state.comments.status = 'error';\n    },\n    // доб\n    [fetchComments.pending]: state => {\n      state.comments.items = [];\n      state.comments.status = 'loading';\n    }\n  }\n});\nexport const postsReducer = postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchRemovePost","fetchPosts","data","get","fetchTags","fetchComments","postId","addComment","text","post","removeComment","commentId","delete","initialState","posts","items","status","tags","comments","postsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","aciton","filter","obj","_id","meta","arg","postsReducer","reducer"],"sources":["C:/Users/heyda/OneDrive/Рабочий стол/blog/mern-blog-frontend/src/redux/slices/posts.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\nimport { fetchRemovePost } from \"./auth\";\r\n\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async() => {\r\n    const { data } = await axios.get('/posts')\r\n    return data\r\n})\r\n\r\nexport const fetchTags = createAsyncThunk('posts/fetchTags', async() => {\r\n    const { data } = await axios.get('/tags')\r\n    return data\r\n})\r\n\r\nexport const fetchComments = createAsyncThunk('comments/fetchComments', async(postId) => {\r\n    const {data} = await axios.get(`/posts/${postId}/comments`)\r\n    return data\r\n})\r\n\r\nexport const addComment = createAsyncThunk('comments/addComments', async(postId, text) => {\r\n    const {data} = await axios.post(`/posts/${postId}/comments`, {text})\r\n    return data\r\n})\r\n\r\n\r\nexport const removeComment = createAsyncThunk('comments/removeComments', async(commentId) => {\r\n    await axios.delete(`/comments/${commentId}`)\r\n    return commentId\r\n})\r\n\r\n\r\n\r\nconst initialState = {\r\n    posts: {\r\n        items: [],\r\n        status: 'loading'\r\n    },\r\n    tags: {\r\n        items: [],\r\n        status: 'loading'\r\n    },\r\n    comments: {\r\n        items: [],\r\n        status: 'loading'\r\n    }\r\n}\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        // Получение статей\r\n        [fetchPosts.pending]: (state) => {\r\n            state.posts.items = []\r\n            state.posts.status = 'loading'\r\n        },\r\n        [fetchPosts.fulfilled]: (state, action) => {\r\n            state.posts.items = action.payload\r\n            state.posts.status = 'loaded'\r\n        },\r\n        [fetchPosts.rejected]: (state) => {\r\n            state.posts.items = []\r\n            state.posts.status = 'error'\r\n        },\r\n                // Получение тэгов\r\n        [fetchTags.pending]: (state) => {\r\n            state.tags.items = []\r\n            state.tags.status = 'loading'\r\n        },\r\n        [fetchTags.fulfilled]: (state, action) => {\r\n            state.tags.items = action.payload\r\n            state.tags.status = 'loaded'\r\n        },\r\n        [fetchTags.rejected]: (state) => {\r\n            state.tags.items = []\r\n            state.tags.status = 'error'\r\n        },\r\n        // Удаление\r\n\r\n        [fetchRemovePost.pending]: (state, aciton) => {\r\n            state.posts.items = state.posts.items.filter(obj => obj._id !== aciton.meta.arg)\r\n        },\r\n\r\n        // получение коментариев\r\n\r\n        [fetchComments.pending]: (state) => {\r\n            state.comments.items = []\r\n            state.comments.status = 'loading'\r\n        },\r\n        [fetchComments.fulfilled]: (state, action) => {\r\n            state.comments.items = action.payload\r\n            state.comments.status = 'loaded'\r\n        },\r\n        [fetchComments.rejected]: (state) => {\r\n            state.comments.items = []\r\n            state.comments.status = 'error'\r\n        },\r\n\r\n        // доб\r\n\r\n        [fetchComments.pending]: (state) => {\r\n            state.comments.items = []\r\n            state.comments.status = 'loading'\r\n        },\r\n    }\r\n})\r\n\r\nexport const postsReducer = postsSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}