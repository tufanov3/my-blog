{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyda\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\blog\\\\mern-blog-frontend\\\\src\\\\components\\\\tagsPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPostsByTag } from '../redux/slices/posts';\nimport { Post } from '../components/Post';\nimport { useState } from 'react';\nimport axios from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TagsPosts = () => {\n  _s();\n\n  const {\n    tag\n  } = useParams(); // Получаем тег из URL\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState();\n  const {\n    posts\n  } = useSelector(state => state.posts); // Данные о постах\n\n  const isPostsLoading = posts.status === 'loading'; // Проверка статуса загрузки\n\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (!id) {\n      console.warn(\"no ID\");\n    }\n\n    console.log(id);\n    axios.get(`/posts/${id}`).then(res => {\n      setData(res.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.warn(err);\n      alert(\"Ошибка при получении статьи\");\n    });\n  }, [id]);\n  useEffect(() => {\n    if (tag) dispatch(fetchPostsByTag(tag)); // Загружаем посты по выбранному тегу\n  }, [dispatch, tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u043E\\u0441\\u0442\\u044B \\u0441 \\u0442\\u0435\\u0433\\u043E\\u043C: \", tag]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) // Отображаем текст \"Загрузка...\" пока данные не загружены\n    : posts.items.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      title: post.title,\n      text: post.text,\n      tags: post.tags,\n      viewsCount: post.viewsCount,\n      isFullPost: true\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagsPosts, \"5kvR4e7u/uGEYwHw/fCacz6tPPI=\", false, function () {\n  return [useParams, useDispatch, useSelector, useParams];\n});\n\n_c = TagsPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsPosts\");","map":{"version":3,"names":["React","useEffect","useParams","useDispatch","useSelector","fetchPostsByTag","Post","useState","axios","TagsPosts","tag","dispatch","data","setData","posts","state","isPostsLoading","status","isLoading","setIsLoading","id","console","warn","log","get","then","res","catch","err","alert","items","map","post","title","text","tags","viewsCount","_id"],"sources":["C:/Users/heyda/OneDrive/Рабочий стол/blog/mern-blog-frontend/src/components/tagsPosts.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPostsByTag } from '../redux/slices/posts';\r\nimport { Post } from '../components/Post';\r\nimport { useState } from 'react'\r\nimport axios from \"../axios\";\r\n\r\nexport const TagsPosts = () => {\r\n  const { tag } = useParams(); // Получаем тег из URL\r\n  const dispatch = useDispatch();\r\nconst [data, setData] = useState();\r\n  const { posts } = useSelector((state) => state.posts); // Данные о постах\r\n  const isPostsLoading = posts.status === 'loading'; // Проверка статуса загрузки\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n      if(!id) {\r\n        console.warn(\"no ID\")\r\n      }\r\n      console.log(id)\r\n      axios\r\n        .get(`/posts/${id}`)\r\n        .then((res) => {\r\n          setData(res.data);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.warn(err);\r\n          alert(\"Ошибка при получении статьи\");\r\n        });\r\n    }, [id]);\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    if(tag)\r\n    dispatch(fetchPostsByTag(tag)); // Загружаем посты по выбранному тегу\r\n  }, [dispatch, tag]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Посты с тегом: {tag}</h1>\r\n      {isPostsLoading ? (\r\n        <p>Загрузка...</p> // Отображаем текст \"Загрузка...\" пока данные не загружены\r\n      ) : (\r\n        posts.items.map((post) => (\r\n          <Post\r\n            key={post._id}\r\n            title={post.title}\r\n            text={post.text}\r\n            tags={post.tags}  \r\n            viewsCount={post.viewsCount} \r\n            isFullPost\r\n              />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM;IAAEC;EAAF,IAAUR,SAAS,EAAzB,CAD6B,CACA;;EAC7B,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;EACF,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;EACE,MAAM;IAAEO;EAAF,IAAYV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAA7B,CAJ6B,CAI0B;;EACvD,MAAME,cAAc,GAAGF,KAAK,CAACG,MAAN,KAAiB,SAAxC,CAL6B,CAKsB;;EACnD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM;IAAEa;EAAF,IAASlB,SAAS,EAAxB;EAEED,SAAS,CAAC,MAAM;IACd,IAAG,CAACmB,EAAJ,EAAQ;MACNC,OAAO,CAACC,IAAR,CAAa,OAAb;IACD;;IACDD,OAAO,CAACE,GAAR,CAAYH,EAAZ;IACAZ,KAAK,CACFgB,GADH,CACQ,UAASJ,EAAG,EADpB,EAEGK,IAFH,CAESC,GAAD,IAAS;MACbb,OAAO,CAACa,GAAG,CAACd,IAAL,CAAP;MACAO,YAAY,CAAC,KAAD,CAAZ;IACD,CALH,EAMGQ,KANH,CAMUC,GAAD,IAAS;MACdP,OAAO,CAACC,IAAR,CAAaM,GAAb;MACAC,KAAK,CAAC,6BAAD,CAAL;IACD,CATH;EAUD,CAfQ,EAeN,CAACT,EAAD,CAfM,CAAT;EAmBFnB,SAAS,CAAC,MAAM;IACd,IAAGS,GAAH,EACAC,QAAQ,CAACN,eAAe,CAACK,GAAD,CAAhB,CAAR,CAFc,CAEkB;EACjC,CAHQ,EAGN,CAACC,QAAD,EAAWD,GAAX,CAHM,CAAT;EAMA,oBACE;IAAA,wBACE;MAAA,qFAAoBA,GAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGM,cAAc,gBACb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADa,CACM;IADN,EAGbF,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACd,QAAC,IAAD;MAEE,KAAK,EAAEA,IAAI,CAACC,KAFd;MAGE,IAAI,EAAED,IAAI,CAACE,IAHb;MAIE,IAAI,EAAEF,IAAI,CAACG,IAJb;MAKE,UAAU,EAAEH,IAAI,CAACI,UALnB;MAME,UAAU;IANZ,GACOJ,IAAI,CAACK,GADZ;MAAA;MAAA;MAAA;IAAA,QADF,CALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CArDM;;GAAM5B,S;UACKP,S,EACCC,W,EAECC,W,EAGHF,S;;;KAPJO,S"},"metadata":{},"sourceType":"module"}